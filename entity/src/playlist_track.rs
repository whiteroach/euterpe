//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "playlist_track")]
pub struct Model {
    pub playlist_id: i32,
    pub track_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    Playlists,
    Tracks,
}


impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        match self {
            Self::Playlists => Entity::belongs_to(super::playlists::Entity).from(Column::playlist_id
            ).to(super::albums::Column::PlaylistId).into(),
            Self::Tracks => Entity::belongs_to(super::tracks::Entity).from(Column::track_id).to(super::tracks::Column::TrackId).into(),
        }
    }
}

impl ActiveModelBehavior for ActiveModel {}
