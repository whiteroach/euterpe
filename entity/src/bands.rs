//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "bands")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub band_id: i32,
    pub name: String,
    pub active: bool,
    pub owned: bool,
    pub deleted_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::albums::Entity")]
    Albums,
    #[sea_orm(has_many = "super::band_label::Entity")]
    BandLabel,
    #[sea_orm(has_many = "super::band_picture::Entity")]
    BandPicture,
    #[sea_orm(has_many = "super::band_user::Entity")]
    BandUser,
}

impl Related<super::albums::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Albums.def()
    }
}

impl Related<super::band_label::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BandLabel.def()
    }
}

impl Related<super::band_picture::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BandPicture.def()
    }
}

impl Related<super::band_user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BandUser.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
